generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlserver"
  url      = env("DATABASE_URL")
}

model User {
  user_id          Int             @id @default(autoincrement())
  username         String          @unique @db.VarChar(20)
  password         String          @db.VarChar(255)
  nik              String?         @db.VarChar(20)
  nip              String?         @db.VarChar(20)
  sobat_id         String?         @db.VarChar(20)
  email            String          @unique @db.VarChar(20)
  nama             String?         @db.VarChar(255)
  status           Int?            @db.TinyInt
  status_blacklist Int?            @db.TinyInt
  no_hp            String?         @db.VarChar(20)
  is_agree         Int?            @db.TinyInt
  is_pegawai       Int?            @db.TinyInt
  unit_id          Int?
  status_nik       Int?            @db.TinyInt
  created_by       String          @db.VarChar(20)
  created_at       DateTime        @default(now()) @db.DateTime
  updated_by       String?         @db.VarChar(20)
  updated_at       DateTime?       @db.DateTime
  PetugasSurvei    PetugasSurvei[]
  UserRole         UserRole[]
}

model UserRole {
  user_role_id Int       @id @default(autoincrement())
  username     String    @db.VarChar(20)
  role_id      Int
  status       Int       @db.TinyInt
  created_by   String    @db.VarChar(20)
  created_at   DateTime  @default(now()) @db.DateTime
  updated_by   String?   @db.VarChar(20)
  updated_at   DateTime? @db.DateTime
  user         User      @relation(fields: [username], references: [username], onDelete: Cascade)
}

model Indikator {
  indikator_id      Int                 @id @default(autoincrement())
  branch_kd         String              @db.VarChar(20)
  nama              String              @db.VarChar(20)
  is_benefit        Int                 @db.TinyInt
  definisi          String              @db.VarChar(255)
  created_by        String              @db.VarChar(20)
  created_at        DateTime            @default(now()) @db.DateTime
  updated_by        String?             @db.VarChar(20)
  updated_at        DateTime?           @db.DateTime
  KategoriIndikator KategoriIndikator[]
}

model Kategori {
  kategori_id               Int                         @id @default(autoincrement())
  nama                      String                      @db.VarChar(20)
  definisi                  String                      @db.VarChar(255)
  created_by                String                      @db.VarChar(20)
  created_at                DateTime                    @default(now()) @db.DateTime
  updated_by                String?                     @db.VarChar(20)
  updated_at                DateTime?                   @db.DateTime
  JumPosisiPetugasKegSurvei JumPosisiPetugasKegSurvei[]
  KategoriIndikator         KategoriIndikator[]
}

model KategoriIndikator {
  kategoriIndikator_id Int       @id @default(autoincrement())
  branch_kd            String    @db.VarChar(20)
  kategori_id          Int
  indikator_id         Int
  bobot                Decimal?  @db.Decimal(3, 3)
  no_urut              Int       @db.TinyInt
  perbandingan         String    @db.VarChar(100)
  created_by           String    @db.VarChar(20)
  created_at           DateTime  @default(now()) @db.DateTime
  updated_by           String?   @db.VarChar(20)
  updated_at           DateTime? @db.DateTime
  indikator            Indikator @relation(fields: [indikator_id], references: [indikator_id], onDelete: Cascade)
  kategori             Kategori  @relation(fields: [kategori_id], references: [kategori_id], onDelete: Cascade)
}

model Survei {
  survei_id                 Int                         @id @default(autoincrement())
  kode                      String                      @unique @db.VarChar(20)
  nama                      String                      @db.VarChar(255)
  tahun                     String                      @db.VarChar(4)
  tipe                      Int                         @db.TinyInt
  unit_kd                   String?                     @db.VarChar(20)
  created_by                String                      @db.VarChar(20)
  created_at                DateTime                    @default(now()) @db.DateTime
  updated_by                String?                     @db.VarChar(20)
  updated_at                DateTime?                   @db.DateTime
  JumPosisiPetugasKegSurvei JumPosisiPetugasKegSurvei[]
  KegSurvei                 KegSurvei[]
  PetugasSurvei             PetugasSurvei[]
  PosKegSurvei              PosKegSurvei[]
}

model Kegiatan {
  kegiatan_id               Int                         @id @default(autoincrement())
  kode                      String                      @unique @db.VarChar(10)
  nama                      String                      @db.VarChar(255)
  deskripsi                 String                      @db.VarChar(255)
  status                    Int                         @db.TinyInt
  created_by                String                      @db.VarChar(20)
  created_at                DateTime                    @default(now()) @db.DateTime
  updated_by                String?                     @db.VarChar(20)
  updated_at                DateTime?                   @db.DateTime
  JumPosisiPetugasKegSurvei JumPosisiPetugasKegSurvei[]
  KegSurvei                 KegSurvei[]
  PetugasSurvei             PetugasSurvei[]
  PosKegSurvei              PosKegSurvei[]
}

model KegSurvei {
  kegsurvei_id     Int       @id @default(autoincrement())
  survei_kd        String    @db.VarChar(20)
  keg_kd           String    @db.VarChar(10)
  status           Int       @db.TinyInt
  tgl_buka         DateTime? @db.DateTime
  tgl_rek_mulai    DateTime? @db.DateTime
  tgl_rek_selesai  DateTime? @db.DateTime
  tgl_mulai        DateTime? @db.DateTime
  tgl_selesai      DateTime? @db.DateTime
  is_rekrutmen     Int?      @db.TinyInt
  is_multi         Int?      @db.TinyInt
  is_confirm       Boolean?
  is_add_indicator Boolean?
  created_by       String    @db.VarChar(20)
  created_at       DateTime  @default(now()) @db.DateTime
  updated_by       String?   @db.VarChar(20)
  updated_at       DateTime? @db.DateTime
  Kegiatan         Kegiatan  @relation(fields: [keg_kd], references: [kode])
  Survei           Survei    @relation(fields: [survei_kd], references: [kode])
}

model Posisi {
  posisi_id     Int             @id @default(autoincrement())
  kode          String          @unique @db.VarChar(10)
  nama          String          @db.VarChar(100)
  deskripsi     String          @db.VarChar(100)
  status        Int             @db.TinyInt
  created_by    String          @db.VarChar(20)
  created_at    DateTime        @default(now()) @db.DateTime
  updated_by    String?         @db.VarChar(20)
  updated_at    DateTime?       @db.DateTime
  PetugasSurvei PetugasSurvei[]
  PosKegSurvei  PosKegSurvei[]
}

model PosKegSurvei {
  poskegsurvei_id Int       @id @default(autoincrement())
  survei_kd       String    @db.VarChar(20)
  keg_kd          String    @db.VarChar(10)
  posisi_kd       String    @db.VarChar(10)
  urutan          Int?      @db.TinyInt
  is_view_mitra   Int?      @db.TinyInt
  is_multi        Int?      @db.TinyInt
  created_by      String    @db.VarChar(20)
  created_at      DateTime  @default(now()) @db.DateTime
  updated_by      String?   @db.VarChar(20)
  updated_at      DateTime? @db.DateTime
  Kegiatan        Kegiatan  @relation(fields: [keg_kd], references: [kode])
  Posisi          Posisi    @relation(fields: [posisi_kd], references: [kode])
  Survei          Survei    @relation(fields: [survei_kd], references: [kode])
}

model JumPosisiPetugasKegSurvei {
  jumposisipetugaskegsurvei_id Int       @id @default(autoincrement())
  survei_kd                    String    @db.VarChar(20)
  keg_kd                       String    @db.VarChar(10)
  unit_kd                      String?   @db.VarChar(20)
  branch_kd                    String    @db.VarChar(20)
  kategori_id                  Int
  jumlah                       Int       @db.SmallInt
  created_by                   String    @db.VarChar(20)
  created_at                   DateTime  @default(now()) @db.DateTime
  updated_by                   String?   @db.VarChar(20)
  updated_at                   DateTime? @db.DateTime
  kategori                     Kategori  @relation(fields: [kategori_id], references: [kategori_id], onDelete: Cascade)
  Kegiatan                     Kegiatan  @relation(fields: [keg_kd], references: [kode])
  Survei                       Survei    @relation(fields: [survei_kd], references: [kode])
}

model PetugasSurvei {
  petugassurvei_id Int       @id @default(autoincrement())
  survei_kd        String    @db.VarChar(20)
  keg_kd           String    @db.VarChar(10)
  branch_kd        String    @db.VarChar(20)
  posisi_kd        String    @db.VarChar(10)
  username         String    @db.VarChar(20)
  status           Int       @db.TinyInt
  created_by       String    @db.VarChar(20)
  created_at       DateTime  @default(now()) @db.DateTime
  updated_by       String?   @db.VarChar(20)
  updated_at       DateTime? @db.DateTime
  Kegiatan         Kegiatan  @relation(fields: [keg_kd], references: [kode])
  Posisi           Posisi    @relation(fields: [posisi_kd], references: [kode])
  Survei           Survei    @relation(fields: [survei_kd], references: [kode])
  user             User      @relation(fields: [username], references: [username])
}
