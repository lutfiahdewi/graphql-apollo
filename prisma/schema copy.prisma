generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlserver"
  url      = env("DATABASE_URL")
}

model User {
  user_id          Int        @id @default(autoincrement())
  username         String     @unique @db.VarChar(20)
  password         String     @db.VarChar(255)
  nik              String?    @db.VarChar(20)
  nip              String?    @db.VarChar(20)
  sobat_id         String?    @db.VarChar(20) //@unique
  email            String     @unique @db.VarChar(20)
  nama             String?    @db.VarChar(255)
  status           Int?       @db.TinyInt
  status_blacklist Int?       @db.TinyInt
  no_hp            String?    @db.VarChar(20)
  is_agree         Int?       @db.TinyInt
  is_pegawai       Int?       @db.TinyInt
  unit_id          Int?
  status_nik       Int?       @db.TinyInt
  created_by       String     @db.VarChar(20)
  created_at       DateTime   @default(dbgenerated("CURRENT_TIMESTAMP")) @db.DateTime
  updated_by       String?    @db.VarChar(20)
  updated_at       DateTime?  @db.DateTime
  UserRole         UserRole[]
}

model UserRole {
  user_role_id Int       @id @default(autoincrement())
  user         User      @relation(fields: [username], references: [username], onDelete: Cascade, onUpdate: Cascade)
  username     String
  role_id      Int
  status       Int       @db.TinyInt
  created_by   String    @db.VarChar(20)
  created_at   DateTime  @default(dbgenerated("CURRENT_TIMESTAMP")) @db.DateTime
  updated_by   String?   @db.VarChar(20)
  updated_at   DateTime? @db.DateTime
}

model Indikator {
  indikator_id      Int                 @id @default(autoincrement())
  branch_kd         String              @db.VarChar(20)
  nama              String              @db.VarChar(20)
  is_benefit        Int                 @db.TinyInt
  definisi          String              @db.VarChar(255)
  created_by        String              @db.VarChar(20)
  created_at        DateTime            @default(dbgenerated("CURRENT_TIMESTAMP")) @db.DateTime
  updated_by        String?             @db.VarChar(20)
  updated_at        DateTime?           @db.DateTime
  KategoriIndikator KategoriIndikator[]
}

model Kategori {
  kategori_id       Int                 @id @default(autoincrement())
  nama              String              @db.VarChar(20)
  definisi          String              @db.VarChar(255)
  created_by        String              @db.VarChar(20)
  created_at        DateTime            @default(dbgenerated("CURRENT_TIMESTAMP")) @db.DateTime
  updated_by        String?             @db.VarChar(20)
  updated_at        DateTime?           @db.DateTime
  KategoriIndikator KategoriIndikator[]
}

model KategoriIndikator {
  kategoriIndikator_id Int       @id @default(autoincrement())
  branch_kd            String    @db.VarChar(20)
  kategori             Kategori  @relation(fields: [kategori_id], references: [kategori_id], onDelete: Cascade, onUpdate: Cascade)
  kategori_id          Int
  indikator            Indikator @relation(fields: [indikator_id], references: [indikator_id], onDelete: Cascade, onUpdate: Cascade)
  indikator_id         Int
  bobot                Decimal?  @db.Decimal(3, 3)
  no_urut              Int       @db.TinyInt
  perbandingan         String    @db.VarChar(100)
  created_by           String    @db.VarChar(20)
  created_at           DateTime  @default(now()) @db.DateTime
  updated_by           String?   @db.VarChar(20)
  updated_at           DateTime? @db.DateTime

  // @@id([kategori_id,indikator_id])
}

// model kegiatans {
//   ID     Int    @id(map: "PK__kegiatan__3214EC2773C47BE3") @default(autoincrement())
//   Title  String @db.VarChar(255)
//   Status String @db.VarChar(255)
//   UserID Int?
//   users  users? @relation(fields: [UserID], references: [ID], onDelete: NoAction, onUpdate: NoAction, map: "FK__kegiatans__UserI__6B24EA82")
// }

// model tKegSurvei {
//   ID               Int       @id(map: "PK__tKegSurv__3214EC271953102D") @default(autoincrement())
//   survei_kd        String    @db.VarChar(50)
//   keg_kd           String    @db.VarChar(10)
//   status           Int       @db.TinyInt
//   tgl_buka         DateTime? @db.DateTime
//   tgl_rek_mulai    DateTime? @db.DateTime
//   tgl_rek_selesai  DateTime? @db.DateTime
//   tgl_mulai        DateTime? @db.DateTime
//   tgl_selesai      DateTime? @db.DateTime
//   is_rekrutmen     Int?      @db.TinyInt
//   is_multi         Int?      @db.TinyInt
//   is_confirm       Boolean?
//   is_add_indicator Boolean?
//   created_by       String    @db.VarChar(20)
//   created_at       DateTime? @default(now(), map: "DF__tKegSurve__creat__778AC167") @db.DateTime
//   updated_by       String?   @db.VarChar(20)
//   updated_at       DateTime? @db.DateTime
// }

// model tPosKegSurvei {
//   ID            Int       @id(map: "PK__tPosKegS__3214EC27BDE99A92") @default(autoincrement())
//   survei_kd     String    @db.VarChar(20)
//   keg_kd        String    @db.VarChar(20)
//   urutan        Int?      @db.TinyInt
//   is_view_mitra Int?      @db.TinyInt
//   is_multi      Int?      @db.TinyInt
//   created_by    String    @db.VarChar(20)
//   created_at    DateTime? @default(now(), map: "DF__tPosKegSu__creat__7A672E12") @db.DateTime
//   updated_by    String?   @db.VarChar(20)
//   updated_at    DateTime? @db.DateTime
// }

// model users {
//   ID        Int         @id(map: "PK__users__3214EC278D78822C") @default(autoincrement())
//   Username  String      @db.VarChar(255)
//   Password  String      @db.VarChar(255)
//   kegiatans kegiatans[]
// }
